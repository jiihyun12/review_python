# 251004

import sys
input = sys.stdin.readline

T = int(input())

dp = [0] * 11
dp[1], dp[2], dp[3] = 1, 2, 4

for i in range(4, 11):
    dp[i] = dp[i-1] + dp[i-2] + dp[i-3]

for _ in range(T):
    n = int(input())
    print(dp[n])




# ======================================================

# 정수 n이 주어졌을 때,
# n을 1, 2, 3의 합으로 나타내는 방법의 수를 구하는 문제


# 빠른 입력을 위해 sys 모듈 사용
import sys
input = sys.stdin.readline

# 테스트 케이스 개수 입력
# 예: 3 (즉, n을 3번 입력받음)
T = int(input())

# -------------------------------
# dp[n] = n을 1, 2, 3의 합으로 나타내는 방법의 수
# 미리 dp 테이블을 0으로 초기화 (최대 n은 문제에서 10 이하)
# (문제 조건: 1 ≤ n ≤ 10)
# -------------------------------
dp = [0] * 11  # 인덱스 0~10까지 쓰기 위해 크기를 11로 설정

# -------------------------------
# 초기값(기저 사례, Base Case)
# 직접 손으로 세면 다음과 같음:
# 1 = (1)                         → 1가지
# 2 = (1+1), (2)                  → 2가지
# 3 = (1+1+1), (1+2), (2+1), (3)  → 4가지
# -------------------------------
dp[1] = 1
dp[2] = 2
dp[3] = 4

# -------------------------------
# 점화식(Recurrence Relation)
# n을 1, 2, 3으로 만드는 방법 수 =
#   (n-1을 만든 뒤 +1) +
#   (n-2를 만든 뒤 +2) +
#   (n-3을 만든 뒤 +3)
#
# 예: 4를 만드는 방법 수 =
#     dp[3] + dp[2] + dp[1] = 4 + 2 + 1 = 7
# -------------------------------
for i in range(4, 11):  # 4부터 10까지 계산
    dp[i] = dp[i-1] + dp[i-2] + dp[i-3]

# -------------------------------
# 이제 입력된 각 테스트 케이스 n마다 dp[n] 값을 출력
# -------------------------------
for _ in range(T):
    n = int(input())
    print(dp[n])
